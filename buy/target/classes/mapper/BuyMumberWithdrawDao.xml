<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whp.buyshop.buy.Dao.BuyMumberWithdrawDao">
    <select id="BuyMumberWithdrawSelect" resultType="map">
        SELECT
        DATE_FORMAT(
        a.createtime,
        '%Y-%m-%d %H:%i:%s'
        ) AS createtime,
        DATE_FORMAT(
        a.examinetime,
        '%Y-%m-%d %H:%i:%s'
        ) AS examinetime,
        a.*, c.img AS 'user_img',
        c.nickname,
        b.img,b.fullname
        FROM
        buy_mumber_withdraw AS a
        INNER JOIN buy_mumber as b on b.pid=a.mumberid
        LEFT JOIN sub_user AS c ON c.pid = a.userid
        where a.buyid=#{buyid} and a.mumberid=#{mumberid}
        <if test="state!=null and state!=''">
            and a.state=#{state}
        </if>
        ORDER BY examinetime DESC
        limit #{page},#{num}
    </select>
    <select id="BuyMumberWithdrawCount" resultType="int">
        SELECT
        count(0)
        FROM
        buy_mumber_withdraw AS a
        INNER JOIN buy_mumber as b on b.pid=a.mumberid
        LEFT JOIN sub_user AS c ON c.pid = a.userid
        where a.buyid=#{buyid} and a.mumberid=#{mumberid}
        <if test="state!=null and state!=''">
            and a.state=#{state}
        </if>
        ORDER BY examinetime DESC
    </select>
    <insert id="BuyMumberWithdrawInsert">
        INSERT INTO `buy_mumber_withdraw` (
        `pid`,
        `createtime`,
        `money`,
        `state`,
        `mumberid`,
        `buyid`,
        `userid`,
        `examinetime`,
        `memo`,
        `actual_money`,
        `tax_money`,
        `before_money`,
        `after_money`
        )
        VALUES
        (
        #{pid},
        now(),
        #{money},
        #{state},
        #{mumberid},
        #{buyid},
        #{userid},
        now(),
        #{memo},
        #{actual_money},
        #{tax_money},
        #{before_money},
        (select surplus from `buy_mumber_money` where pid=#{mumberid})
        );
    </insert>


    <update id="BuyMumberWithdrawUpdate">
        update `buy_mumber_withdraw`
        <set>
            <if test="state!=null and state!=''">
                state=#{state},
            </if>
            <!--<if test="before_money!=null and before_money!=''">-->
            <!--before_money=#{before_money},-->
            <!--</if>-->
            <!--<if test="after_money!=null and after_money!=''">-->
            <!--after_money=(select surplus from `buy_mumber_money` where pid=#{mumberid}),-->
            <!--</if>-->
            <if test="memo!=null and memo!=''">
                memo=#{memo},
            </if>
        </set>
        where pid=#{pid}

    </update>
</mapper>